{"version":3,"sources":["components/contact-list/ContactList.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/contact-form/ContactForm.js","components/contact-list/ContactList.js","components/filter/Filter.js","components/Container/Container.js","App.js","index.js","components/contact-form/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterByName","items","createReducer","initialContacts","actions","state","action","filter","combineReducers","middleware","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","ContactForm","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactsToCheck","getState","length","map","contact","push","includes","alert","props","onSubmit","reset","nameInputId","numberInputId","this","className","styles","form","htmlFor","form__label","form__input","type","pattern","title","required","onChange","form__btn","Component","connect","dispatch","text","contactActions","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","onDeleteContact","list","itemName","list__item","onClick","list__btn","e","target","Container","children","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21ec5418.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2UtNU\",\"list__item\":\"ContactList_list__item__2fY1U\",\"list__btn\":\"ContactList_list__btn__3M85I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1rx-j\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\nconst filterByName = createAction(\"contacts/filterByName\");\r\n\r\nexport default { addContact, deleteContact, filterByName };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport initialContacts from \"../../components/contactArr.json\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterByName]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import logger from \"redux-logger\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst middleware = [logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/phonebook/phonebook-actions\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"../contact-form/ContactForm.module.css\";\r\nimport store from \"../../redux/store\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let contactsToCheck = [];\r\n    if (store.getState().contacts.items.length > 0) {\r\n      const checkedContacts = store.getState().contacts.items.map((contact) => {\r\n        return contactsToCheck.push(contact.name);\r\n      });\r\n    }\r\n    if (\r\n      !contactsToCheck.includes(this.state.name) &&\r\n      contactsToCheck.length !== 0\r\n    ) {\r\n      this.props.onSubmit(this.state); /* передаємо значення на проп onSubmit */\r\n      this.reset();\r\n      contactsToCheck = [];\r\n      return;\r\n    }\r\n    return alert(`${this.state.name} is already in the contacts`);\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <label htmlFor={this.nameInputId} className={styles.form__label}>\r\n            Name\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId} className={styles.form__label}>\r\n            Number\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.form__btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (text) => dispatch(contactActions.addContact(text)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/phonebook/phonebook-actions\";\r\nimport styles from \"../contact-list/ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <div>\r\n    <ul className={styles.list}>\r\n      {contacts.map((itemName) => (\r\n        <li key={itemName.id} className={styles.list__item}>\r\n          {itemName.name}: {itemName.number}\r\n          <button\r\n            onClick={() => onDeleteContact(itemName.id)}\r\n            className={styles.list__btn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  return {\r\n    contacts: getVisibleContacts(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => {\r\n    dispatch(contactActions.filterByName(e.target.value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"../Container/Container.module.css\";\r\nconst Container = ({ children }) => (\r\n  <>{<div className={styles.container}>{children}</div>}</>\r\n);\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport ContactForm from \"./components/contact-form/ContactForm\";\nimport ContactList from \"./components/contact-list/ContactList\";\nimport Filter from \"./components/filter/Filter\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => {\n  return (\n    <>\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1B0Jb\",\"form__label\":\"ContactForm_form__label__2Ta-h\",\"form__input\":\"ContactForm_form__input__3jj8w\",\"form__btn\":\"ContactForm_form__btn__351L_\"};"],"sourceRoot":""}